// GRID LAYOUT - Canned layout styles that can be used anywhere
////////////////////////////////////////////////////////////////

// ----- If the browser doesn't support CSS Grid  -----

.l-container {
  margin: $base-spacing auto;
  position: relative;
  display: inline-block;
  max-width: $max-width;
  padding-right: $small-spacing / 2;
}

.l-full,
.l-short,
.l-split,
.l-long {
  display: inline-block;
  vertical-align: top;
  text-align: left;
  padding-left: $small-spacing / 2;
  @media screen and (max-width: 600px) {
    width: 100% !important;
  }
  img {
    max-width: 100%;
  }
}

.l-full {
  width: 100%;
}

.l-short {
  width: 32.8%;
}

.l-split {
  width: 49.6%;
}

.l-long {
  width: 66.5%;
}

// ----- If the browser supports CSS Grid -----

@supports (display:grid) {
  .l-container {
    position: relative;
    display: grid;
    max-width: $max-width;
    padding: 0 $base-spacing;
    margin: $large-spacing auto;
    grid-template-columns: repeat(12, 1fr);
    grid-column-gap: $base-spacing;
  }

  .l-full,
  .l-short,
  .l-split,
  .l-long {
    width: auto; //otherwise, the grid items will revert to the widths set above
    padding: 0 !important; // padding not needed since we have grid-column-gap
    img {
      width: 100%;
    }
  }

  // Full width
  .l-full {
    grid-column: span 12;
  }

  // 1/3
  .l-short {
   grid-column: span 12;
   @include media($medium) {
     grid-column: span 4;
   }
  }

  // 1/2
  .l-split {
   grid-column: span 12;
   @include media($medium) {
     grid-column: span 6;
   }
  }

  // 2/3
  .l-long {
   grid-column: span 12;
   @include media($medium) {
     grid-column: span 8;
   }
  }
}
